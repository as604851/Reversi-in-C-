#include <iostream>

const int SIZE = 9;

void printBoard(char board[10][10]) {
    std::cout << " "; for (int i = 1; i < 9; i++) { std::cout << " " << i; } std::cout << std::endl;
    for (int i = 1; i < 9; i++) {
        std::cout << i << " ";
        for (int j = 1; j < 9; j++) {
            std::cout << board[i][j] << " ";
        }
        std::cout << std::endl;
    }
}

int main() {
    // Reversi Startfeld
    char f[10][10] = {
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', 'x', 'o', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', 'o', 'x', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}
    };
    /*   char f[9][9] = {
       {'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', ' '},
       {'o', 'o', 'o', 'x', 'x', 'o', 'o', 'o', ' '},
       {'o', 'o', 'x', 'x', 'o', 'x', 'o', 'o', ' '},
       {'o', 'x', 'o', 'o', 'x', 'x', 'x', 'o', ' '},
       {'o', 'x', 'o', 'x', 'x', 'x', 'o', ' ', ' '},
       {'o', 'o', 'x', 'x', 'x', 'o', 'o', ' ', ' '},
       {'o', 'o', 'o', 'x', 'x', 'x', 'o', ' ', ' '},
       {' ', ' ', ' ', 'x', 'o', 'o', 'x', ' ', ' '},
       {' ', ' ', ' ', ' ', ' ', 'o', ' ', ' ', ' '}
       };*/

       //char f[9][9] = {
       //{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
       //{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
       //{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
       //{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
       //{' ', ' ', ' ', 'o', 'x', ' ', ' ', ' ', ' '},
       //{' ', ' ', ' ', 'x', 'o', ' ', ' ', ' ', ' '},
       //{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
       //{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
       //{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}
       //};


       // Ausgabe des Startfelds
    printBoard(f);
    char g[10][10] = {
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}
    };
    int a = 0;
    int d = 0;
    int y = 0;
    int x = 0;
    int y1 = 0;
    int x1 = 0;
    int b = 0;
    int c = 0;
    int h = 0;
    int e = 0;
    int ay, ax;
    char ch = 'o';
    char ch1 = 'o';
    char ch2 = 'x';
    int sw = 0;
    int am = 2;
    int sp = 0;
    int sp1 = 0;
    int sp2 = 0;
    int ende = 1;
    int spieler1 = 0;
    int spieler2 = 0;

    while (1) {
        if (am % 2) {
            ch = 'x';  ch1 = 'x'; ch2 = 'o'; am++;  std::cout << "Spieler" << ch;
        }
        else
        {
            ch = 'o'; ch1 = 'o'; ch2 = 'x'; am++; std::cout << "Spieler" << ch;
        }

        sp1 = 0;

        for (int y = 0; y < 10; y++) {
            for (int x = 0; x < 10; x++) {
                g[y][x] = f[y][x];
            }
        }
        //Prüfung Spielzug
        for (y1 = 1; y1 < 9; y1++) {
            for (x1 = 1; x1 < 9; x1++) {
                if (f[y1][x1] == ' ') {
                    ay = y1;
                    ax = x1;
                    f[y1][x1] = ch1;

                    printBoard(f);


                    y = ay;
                    x = ax;
                    b = x; c = x; h = x;
                    if (f[y][x] == ch1 && f[y][x + 1] == ch2) {
                        std::cout << "Prüfung rechts" << ' ' << y << x << ' ' << ch1 << ' ' << ch2 << std::endl;;
                        b++;
                        while (f[y][b] == ch2) {
                            b++;
                            if (f[y][b] == ch1) { e = 0; sp1 = 1; std::cout << "Prüfung rechts bestanden" << ' ' << y << x << ' ' << ch1 << ' ' << ch2 << std::endl;  goto stop18; }
                            if (f[y][b] == ' ') { e = 0; }
                            if (f[y][b] == ch2) { e = 0; }
                        }
                        if (e == 1) {
                            for (c; c < b; c++) {

                                f[y][c] = ch1;
                            }
                            b = 0; goto stop1112;
                        }
                        b = 0;
                    }
                    goto stop1112;


                stop1112:

                    y = ay;
                    x = ax;
                    b = x; c = x; h = x;
                    if (f[y][x] == ch1 && f[y][x - 1] == ch2) {
                        std::cout << "Prüfung links" << y << x;
                        b--;
                        while (f[y][b] == ch2) {
                            b--;
                            if (f[y][b] == ch1) { e = 0; sp1 = 1; goto stop18; }
                            if (f[y][b] == ' ') { e = 0; }
                            if (f[y][b] == ch2) { e = 0; }
                        }
                        if (e == 1) {
                            for (c; c > b; c--) {

                                f[y][c] = ch;
                            }
                            b = 0; goto stop111;
                        }
                        b = 0;
                    }
                    goto stop111;

                stop111:

                    //Prüfung unten
                    y = ay;
                    x = ax;
                    b = y; c = y; h = y;
                    if (f[y][x] == ch && f[y + 1][x] == ch2) {
                        std::cout << "Prüfung unten" << y << x << ch1 << ch2;
                        b++;
                        while (f[b][x] == ch2) {
                            b++;
                            if (f[b][x] == ch1) {
                                e = 1;  e = 0; sp1 = 1;  std::cout << "Prüfung unten abgeschlossen" << y << x << ch1 << ch2; goto stop18;
                            }

                            if (f[b][x] == ' ') { e = 0; }
                            if (f[b][x] == ch2) { e = 0; }
                        }
                    }

                    y = ay;
                    x = ax;
                    b = y; c = y; h = y;
                    if (f[y][x] == ch1 && f[y - 1][x] == ch2) {
                        std::cout << "Prüfung oben";
                        b--;
                        while (f[b][x] == ch2) {
                            b--;
                            if (f[b][x] == ch1) {
                                e = 0; sp1 = 1; goto stop18; std::cout << "Prüfung oben abgeschlossen";
                            }
                            if (f[b][x] == ' ') { e = 0; }
                            if (f[b][x] == ch2) { e = 0; }
                        }
                        if (e == 1) {
                            for (c; c > b; c--) {

                                f[c][x] = ch;
                            }
                            b = 0; goto stop112;
                        }
                        b = 0;
                    }
                    goto stop112;


                stop112:

                    y = ay;
                    x = ax;
                    b = y; c = y; h = y; a = x; d = x;
                    if (f[y][x] == ch1 && f[y + 1][x - 1] == ch2) {
                        std::cout << "Prüfung diagonal unten links";
                        a--;
                        b++;
                        while (f[b][a] == ch2) {
                            a--;
                            b++;
                            if (f[b][a] == ch1) { e = 0; sp1 = 1; std::cout << "Prüfung diagonal unten links abgeschlossen"; goto stop18; }
                            if (f[b][a] == ch2) { e = 0; }
                            if (f[b][a] == ' ') { e = 0; }
                        }
                        if (e == 1) {
                            for (c; c < b; c++) {

                                f[c][d] = ch;
                                d--;

                            }
                            b = 0; a = 0; d = 0; c = 0; goto stop1115;
                        }
                        b = 0; a = 0; b = 0; a = 0; d = 0; c = 0;
                    }
                    goto stop1115;

                stop1115:

                    y = ay;
                    x = ax;
                    b = y; c = y; h = y; a = x; d = x;
                    if (f[y][x] == ch1 && f[y + 1][x + 1] == ch2) {
                        std::cout << "Prüfung diagonal rechts" << y << x;
                        a++;
                        b++;
                        while (f[b][a] == ch2) {
                            a++;
                            b++;
                            if (f[b][a] == ch1) {
                                e = 0; sp1 = 1; goto stop18; std::cout << "Prüfung diagonal rechts abgeschlossen" << y << x;
                            }
                            if (f[b][a] == ch2) { e = 0; }
                            if (f[b][a] == ' ') { e = 0; }
                        }
                        if (e == 1) {
                            for (c; c < b; c++) {

                                f[c][d] = ch;
                                d++;

                            }
                            b = 0; a = 0; d = 0; c = 0; goto stop116;
                        }
                        b = 0; a = 0;
                    }
                    goto stop116;

                stop116:

                    y = ay;
                    x = ax;
                    b = y; c = y; h = y; a = x; d = x;
                    if (f[y][x] == ch1 && f[y - 1][x + 1] == ch2) {
                        std::cout << "1111111";
                        a++;
                        b--;
                        while (f[b][a] == ch2) {
                            a++;
                            b--;
                            if (f[b][a] == ch1) {
                                e = 0; sp1 = 1; goto stop18;
                            }
                            if (f[b][a] == ch2) { e = 0; }
                            if (f[b][a] == ' ') { e = 0; }
                        }
                        if (e == 1) {
                            for (c; c > b; c--) {

                                f[c][d] = ch;
                                d++;

                            }
                            b = 0; a = 0; d = 0; c = 0; goto stop115;
                        }
                        b = 0; a = 0;
                    }
                    goto stop115;

                stop115:


                    y = ay;
                    x = ax;
                    b = y; c = y; h = y; a = x; d = x;
                    if (f[y][x] == ch1 && f[y - 1][x - 1] == ch2) {
                        std::cout << "55555555";
                        a--;
                        b--;
                        while (f[b][a] == ch2) {
                            a--;
                            b--;
                            if (f[b][a] == ch1) {
                                e = 0; sp1 = 1; goto stop18;
                            }
                            if (f[b][a] == ch2) { e = 0; }
                            if (f[b][a] == ' ') { e = 0; }
                        }
                        if (e == 1) {
                            for (c; c > b; c--) {

                                f[c][d] = ch;
                                d--;

                            }
                            b = 0; a = 0; d = 0; c = 0; goto stop117;
                        }
                        b = 0; a = 0;
                    }
                    goto stop117;

                stop117:

                    //printBoard(f);
                    f[y1][x1] = ' ';


                }

            }

        }
        f[y1][x1] = ' ';
    stop18:
        //Alte Matrix wieder reinladen

        for (int y = 0; y < 10; y++) {
            for (int x = 0; x < 10; x++) {
                f[y][x] = g[y][x];
            }
        }
        // if (sp1 == 0) std::cout << "Kein Spielzug möglich" << std::endl;;
        ende = 1;//Matrix f leeren
        for (int y = 0; y < 10; y++) {

            for (int x = 0; x < 10; x++) {
                if (f[y][x] == ' ')ende = 0;
            }
        }
        std::cout << "Hier Ende:" << ende;
        if (sp1 == 0) {
            std::cout << "Kein Spielzug möglich" << std::endl; ende = 1;
        }


        //Alte Matrix wieder reinladen
        if (ende == 1) {
            for (int y = 0; y < 10; y++) {
                for (int x = 0; x < 10; x++) {
                    f[y][x] = g[y][x];
                }
            }

            //Punkt zählen
            for (int y = 0; y < 10; y++) {
                for (int x = 0; x < 10; x++) {

                    if (f[y][x] == 'o') { spieler1++; }
                    if (f[y][x] == 'x') { spieler2++; }

                }
            }
            if (spieler1 == spieler2)std::cout << "Unentschieden: Spieler x gewinnt" << std::endl;
            if (spieler2 < spieler1)std::cout << "Spieler" << ' ' << 'o' << ' ' << "hat gewonnen" << " mit " << spieler1 << " Punkten" << std::endl;////////////////////////////////////////////////////////////////////////
            if (spieler2 > spieler1)std::cout << "Spieler" << ' ' << 'x' << ' ' << "hat gewonnen" << " mit " << spieler2 << " Punkten" << std::endl;

        }

        //sp = 0;
    pruef:

        if (sp1 == 1) std::cout << "Spielzug möglich" << std::endl;;

        //Alte Matrix wieder reinladen

        for (int y = 0; y < 10; y++) {
            for (int x = 0; x < 10; x++) {
                f[y][x] = g[y][x];
            }
        }
        std::cout << std::endl; std::cout << std::endl;


        std::cout << std::endl; std::cout << std::endl;

        int pr = 0;
        int ayy, axx;
    pru:




        printBoard(f);
        std::cout << ch << "Ist am Zug" << std::endl;
        std::cout << "Bitte y-Wert eingeben:" << std::endl;
        std::cin >> ay;
        std::cout << "Bitte x-Wert eingeben:" << std::endl;
        std::cin >> ax;
        //ay--;
        //ax--;

        if (f[ay][ax] != ' ') { std::cout << "Bitte gültigen Zug eingeben!" << std::endl;    goto pru; }


        axx = ax;
        ayy = ay;
        //ay = 4; ax = 4;
        f[ay][ax] = ch;


        y = ay;
        x = ax;

        b = x; c = x; h = x;
        if (f[y][x] == ch1 && f[y][x + 1] == ch2) {
            std::cout << "prüfung rechts ";
            b++;
            while (f[y][b] == ch2) {
                b++;
                if (f[y][b] == ch1) {
                    e = 1;  pr = 1; std::cout << "prüfung rechts ausgeführt";
                }
                if (f[y][b] == ' ') { e = 0; }
                if (f[y][b] == ch2) { e = 0; }
            }
            if (e == 1) {
                for (c; c < b; c++) {

                    f[y][c] = ch1;
                }
                b = 0; goto stop12;
            }
            b = 0;
        }

    stop12:
        y = ay;
        x = ax;
        b = x; c = x; h = x;
        if (f[y][x] == ch1 && f[y][x - 1] == ch2) { //std::cout << "222222";
            b--;
            while (f[y][b] == ch2) {
                b--;
                if (f[y][b] == ch1) { e = 1;   pr = 1; }
                if (f[y][b] == ' ') { e = 0; }
                if (f[y][b] == ch2) { e = 0; }
            }
            if (e == 1) {
                for (c; c > b; c--) {

                    f[y][c] = ch;
                }
                b = 0; goto stop1;
            }
            b = 0;
        }
        goto stop1;

    stop1:

        y = ay;
        x = ax;
        b = y; c = y; h = y;
        if (f[y][x] == ch1 && f[y + 1][x] == ch2) {
            std::cout << "Prüfung unten ";
            b++;
            while (f[b][x] == ch2) {
                b++;
                if (f[b][x] == ch1) {
                    e = 1; pr = 1; std::cout << "Prüfung unten bestanden";
                }
                if (f[b][x] == ' ') { e = 0; }
                if (f[b][x] == ch2) { e = 0; }
            }
            if (e == 1) {
                for (c; c < b; c++) {

                    f[c][x] = ch;
                }
                b = 0; goto stop3;
            }
            b = 0;
        }
        goto stop3;


    stop3:

        y = ay;
        x = ax;
        b = y; c = y; h = y;
        if (f[y][x] == ch1 && f[y - 1][x] == ch2) {
            std::cout << "Prüfunge oben";
            b--;
            while (f[b][x] == ch2) {
                b--;
                if (f[b][x] == ch1) {
                    e = 1;   pr = 1; std::cout << "Prüfunge oben bestanden";

                }
                if (f[b][x] == ' ') { e = 0; }
                if (f[b][x] == ch2) { e = 0; }
            }
            if (e == 1) {
                for (c; c > b; c--) {

                    f[c][x] = ch;
                }
                b = 0; goto stop2;
            }
            b = 0;
        }
        goto stop2;


    stop2:

        y = ay;
        x = ax;
        b = y; c = y; h = y; a = x; d = x;
        if (f[y][x] == ch1 && f[y + 1][x - 1] == ch2) { //std::cout << "222222";
            a--;
            b++;
            while (f[b][a] == ch2) {
                a--;
                b++;
                if (f[b][a] == ch1) {
                    e = 1;  pr = 1;

                }
                if (f[b][a] == ch2) { e = 0; }
                if (f[b][a] == ' ') { e = 0; }
            }
            if (e == 1) {
                for (c; c < b; c++) {

                    f[c][d] = ch;
                    d--;

                }
                b = 0; a = 0; d = 0; c = 0; goto stop5;
            }
            b = 0; a = 0;
        }
        goto stop5;

    stop5:

        y = ay;
        x = ax;
        b = y; c = y; h = y; a = x; d = x;
        if (f[y][x] == ch1 && f[y + 1][x + 1] == ch2) {
            std::cout << "Prüfung diagonal rechts ";
            a++;
            b++;
            while (f[b][a] == ch2) {
                a++;
                b++;
                if (f[b][a] == ch1) {
                    std::cout << "Prüfung diagonal rechts ausgeführt";
                    e = 1; pr = 1;
                }
                if (f[b][a] == ch2) { e = 0; }
                if (f[b][a] == ' ') { e = 0; }
            }
            if (e == 1) {
                for (c; c < b; c++) {

                    f[c][d] = ch;
                    d++;

                }
                b = 0; a = 0; d = 0; c = 0; goto stop6;
            }
            b = 0; a = 0;
        }
        goto stop6;

    stop6:

        y = ay;
        x = ax;
        b = y; c = y; h = y; a = x; d = x;
        if (f[y][x] == ch1 && f[y - 1][x + 1] == ch2) {// f[y-1][x+1]=ch1; std::cout << "222222";
            a++;
            b--;
            while (f[b][a] == ch2) {
                a++;
                b--;
                if (f[b][a] == ch1) {
                    e = 1;  pr = 1;
                }
                if (f[b][a] == ch2) { e = 0; }
                if (f[b][a] == ' ') { e = 0; }
            }
            if (e == 1) {
                for (c; c > b; c--) {

                    f[c][d] = ch;
                    d++;

                }
                b = 0; a = 0; d = 0; c = 0; goto stop15;
            }
            b = 0; a = 0;
        }
        goto stop15;

    stop15:


        y = ay;
        x = ax;
        b = y; c = y; h = y; a = x; d = x;
        if (f[y][x] == ch1 && f[y - 1][x - 1] == ch2) {
            a--;
            b--;
            while (f[b][a] == ch2) {
                a--;
                b--;
                if (f[b][a] == ch1) { e = 1;  pr = 1; }
                if (f[b][a] == ch2) { e = 0; }
                if (f[b][a] == ' ') { e = 0; }
            }
            if (e == 1) {
                for (c; c > b; c--) {

                    f[c][d] = ch;
                    d--;

                }
                b = 0; a = 0; d = 0; c = 0; goto stop17;
            }
            b = 0; a = 0;
        }
        goto stop17;
    stop17:



        if (pr == 0) {
            std::cout << "Bitte gültigen Zug eingeben!" << std::endl;  f[ayy][axx] = ' ';  goto pru;
        }
        pr = 0;

        std::cout << std::endl; std::cout << std::endl;


        std::cout << std::endl; std::cout << std::endl;


        printBoard(f);
        //Matrix voll


    }




    std::cout << std::endl; std::cout << std::endl;


    std::cout << std::endl; std::cout << std::endl;


    //printBoard(f);

    return 0;
}
